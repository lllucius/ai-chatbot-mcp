[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-chatbot-mcp"
version = "0.1.0"
description = "Advanced AI chatbot backend API with FastMCP integration"
readme = "README.md"
authors = [{name = "lllucius", email = "author@example.com"}]
license = {text = "MIT"}
requires-python = ">=3.8"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8+.
target-version = "py38"

[tool.ruff.lint]
# Enable a subset of rules for now, will expand as we fix issues
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings  
    "F",     # Pyflakes
    "I",     # isort
    "UP",    # pyupgrade
    "C4",    # flake8-comprehensions
    "B",     # flake8-bugbear
    "SIM",   # flake8-simplify
    "TCH",   # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Allow `raise` without `from` inside `except`
    "SIM102" # Use a single `if` statement instead of nested `if` statements
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["app", "cli", "client"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "cli", "client"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
no_implicit_reexport = true
strict_optional = false
explicit_package_bases = true
exclude = [
    "migrations/",
    "tests/",
]
